package com.example.login_main;

import java.io.File;
import java.util.Date;
import java.util.LinkedHashMap;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.Dialog;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.provider.MediaStore;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.example.login.R;
import com.example.login_bean.Salesman;
import com.example.login_task.HttpUpload;
import com.example.login_utils.BitmapLruCache;
import com.example.login_utils.Constant;
import com.example.login_utils.DateSharedPreferences;
import com.example.login_view.DialogView;
import com.example.login_view.DialogView.OnBtnClickListener;

public class Editficates extends Activity implements OnClickListener {
	private DateSharedPreferences dateSharedPreferences;
	private Button userid, practitioners, industry;
	private ImageView idPics, idPictos, cyPics, cyPictos, zyPics, zyPictos,editback;
	private EditText id, cyid, zyid;
	private TextView submitid;
	private BitmapLruCache mBitmapLruCache;
	private Salesman salesman;
	private Dialog mDialog;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.editcertificates);
		dateSharedPreferences = DateSharedPreferences.getInstance();
		salesman = Constant.getGson().fromJson(dateSharedPreferences.getLogin(this), Salesman.class);
		final int memory = ((ActivityManager) getSystemService(ACTIVITY_SERVICE))
				.getMemoryClass();
		final int cacheSize = 1024 * memory / 8;
		mBitmapLruCache = BitmapLruCache.getInstance(cacheSize);
		InitView();
	}
	

	private void InitView() {
		
		mDialog = new Dialog(Editficates.this,R.style.pager_dialog);
		mDialog.setCancelable(false);
		mDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		View view = LayoutInflater.from(Editficates.this).inflate(R.layout.progressbar, null);
		mDialog.setContentView(view);
		
		userid = (Button) findViewById(R.id.userid);
		userid.setOnClickListener(this);

		practitioners = (Button) findViewById(R.id.practitioners);
		practitioners.setOnClickListener(this);

		industry = (Button) findViewById(R.id.industry);
		industry.setOnClickListener(this);

		submitid = (TextView) findViewById(R.id.submitid);
		submitid.setOnClickListener(this);
		
		editback = (ImageView)findViewById(R.id.editback);
		editback.setOnClickListener(this);

		idPics = (ImageView) findViewById(R.id.idpic);
		idPictos = (ImageView) findViewById(R.id.idpicto);
		id = (EditText) findViewById(R.id.id);
		if(!TextUtils.isEmpty(salesman.getIdNum())){
			id.setText(salesman.getIdNum());
		}

		cyPics = (ImageView) findViewById(R.id.cypics);
		cyPictos = (ImageView) findViewById(R.id.cypictos);
		cyid = (EditText) findViewById(R.id.cyid);
		if(!TextUtils.isEmpty(salesman.getCongYe())){
			cyid.setText(salesman.getCongYe());
		}

		zyPics = (ImageView) findViewById(R.id.zypics);
		zyPictos = (ImageView) findViewById(R.id.zypictos);
		zyid = (EditText) findViewById(R.id.zyid);
		if(!TextUtils.isEmpty(salesman.getZhanYe())){
			zyid.setText(salesman.getZhanYe());
		}

	}

	private int getphone = 0;

	@Override
	public void onClick(View v) {
		String[] str = null;
		switch (v.getId()) {
		case R.id.userid:// 身份证 1
			getphone = 1;
			getPhone();
			break;
		case R.id.practitioners:// 从业 2
			str = sendMap.get("idPic");
			if (str != null && str[0] != null && str[1] != null
					&& !TextUtils.isEmpty(id.getText())) {
				getphone = 2;
				getPhone();
			} else {
				Toast.makeText(Editficates.this, "请完善身份证信息", Toast.LENGTH_SHORT)
						.show();
//				getphone = 2;
//				getPhone();
			}
			break;
		case R.id.industry:// 展业 3
			str = sendMap.get("cyPic");
			if (str != null && str[0] != null && str[1] != null
					&& !TextUtils.isEmpty(cyid.getText())) {
				getphone = 3;
				getPhone();                                                         
			} else {
				Toast.makeText(Editficates.this, "请完善从业证信息", Toast.LENGTH_SHORT)
						.show();
//				getphone = 3;
//				getPhone();
			}

			break;
		case R.id.submitid:// 提交
			str = sendMap.get("zyPic");
			if (str != null && str[0] != null && str[1] != null
					&& !TextUtils.isEmpty(zyid.getText())) {
				
			} else {
				Toast.makeText(Editficates.this, "请完善展业证信息", Toast.LENGTH_SHORT)
						.show();
				return;
			}
			
			salesman.setPhone(salesman.getPhone());
			salesman.setIdNum(id.getText().toString().trim());
			salesman.setCongYe(cyid.getText().toString().trim());
			salesman.setZhanYe(zyid.getText().toString().trim());
			
			String[] params = new String[2];
			params[0] = Constant.getGson().toJson(salesman);
			params[1] = Constant.getGson().toJson(sendMap);
			
			mDialog.show();
			HttpUpload upload = new HttpUpload(mHandler);
			upload.execute(params);
			
			break;
		case R.id.editback:
			Editficates.this.finish();
			break;
		default:
			break;
		}
	}
	
	private Handler mHandler = new Handler(){
		public void handleMessage(android.os.Message msg) {
			int m = msg.arg1;
			mDialog.dismiss();
			System.out.println("返回数据________>"+msg.obj.toString());
			if(m==200){
				if(msg.obj.toString().contains("error")){//失败
					Log.e("dong", "响应:"+m);
					Log.e("dong", "响应:"+msg.obj.toString());
					Toast.makeText(Editficates.this, "提交信息失败", Toast.LENGTH_LONG).show();
				}else{
					Toast.makeText(Editficates.this, "上传数据成功", Toast.LENGTH_LONG).show();
					dateSharedPreferences.saveLogin(Editficates.this, msg.obj.toString());
					Editficates.this.finish();
				}
			}else{
				Log.e("dong", "响应:"+m);
				Log.e("dong", "响应:"+msg.obj.toString());
				Toast.makeText(Editficates.this, msg.obj.toString(), Toast.LENGTH_LONG).show();
			}
		};
	};

	private String getFile() {
		String url = Environment.getExternalStorageDirectory() + "" + "/Love"
				+ "/";
		File file = new File(url.substring(0, url.lastIndexOf("/") + 1));
		if (!file.exists()) {
			file.mkdirs();
		}
		return url + new Date().getTime() + ".jpg";

	}

	//
	private LinkedHashMap<String, String[]> sendMap = new LinkedHashMap<String, String[]>();

	private void getPhone() {
		DialogView dialogView = new DialogView(Editficates.this,
				R.layout.dialogview, R.style.pager_dialog, "phone");
		dialogView.setOnBtnClickListener(new OnBtnClickListener() {
			@Override
			public void onclick(int i) {
				if (i == 0) {
					Intent picture = new Intent(
							Intent.ACTION_PICK,
							android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
					startActivityForResult(picture, 200);
				} else if (i == 1) {
					Intent takephoto = new Intent(
							android.provider.MediaStore.ACTION_IMAGE_CAPTURE);

					String url = getFile();
					String[] str = null;
					if (getphone == 1) {// 身份证
						if ((str = sendMap.get("idPic")) == null) {
							str = new String[2];
							str[0] = url;
							sendMap.put("idPic", str);
						} else {
							str[1] = url;
						}
					} else if (getphone == 2) {// 从业
						if ((str = sendMap.get("cyPic")) == null) {
							str = new String[2];
							str[0] = url;
							sendMap.put("cyPic", str);
						} else {
							str[1] = url;
						}
					} else if (getphone == 3) {// 展业
						if ((str = sendMap.get("zyPic")) == null) {
							str = new String[2];
							str[0] = url;
							sendMap.put("zyPic", str);
						} else {
							str[1] = url;
						}
					}

					Uri uri = Uri.fromFile(new File(url));
					takephoto.putExtra(MediaStore.EXTRA_OUTPUT, uri);
					startActivityForResult(takephoto, 100);

				}
			}
		});
		dialogView.show();
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		if (requestCode == 200) {
			if (resultCode == RESULT_OK) {
				Uri selectedImage = data.getData();
				String[] filePathColumns = { MediaStore.Images.Media.DATA };
				Cursor c = this.getContentResolver().query(selectedImage,
						filePathColumns, null, null, null);
				c.moveToFirst();
				int columnIndex = c.getColumnIndex(filePathColumns[0]);
				String url = c.getString(columnIndex);
				String[] str = null;
				if (getphone == 1) {// 身份证
					if ((str = sendMap.get("idPic")) == null) {
						str = new String[2];
						str[0] = url;
						sendMap.put("idPic", str);
						idPics.setImageBitmap(getbitmap(str[0]));
					} else {
						str[1] = url;
						idPictos.setImageBitmap(getbitmap(str[1]));
					}
				} else if (getphone == 2) {// 从业
					if ((str = sendMap.get("cyPic")) == null) {
						str = new String[2];
						str[0] = url;
						sendMap.put("cyPic", str);
						cyPics.setImageBitmap(getbitmap(str[0]));
					} else {
						str[1] = url;
						cyPictos.setImageBitmap(getbitmap(str[1]));
					}
				} else if (getphone == 3) {// 展业
					if ((str = sendMap.get("zyPic")) == null) {
						str = new String[2];
						str[0] = url;
						sendMap.put("zyPic", str);
						zyPics.setImageBitmap(getbitmap(str[0]));
					} else {
						str[1] = url;
						zyPictos.setImageBitmap(getbitmap(str[1]));
					}
				}
				c.close();
			} else if (resultCode == RESULT_CANCELED) {
				System.out.println("为选择图片");
			}
		}

		if (requestCode == 100) {
			System.out.println(resultCode);
			if (resultCode == RESULT_OK) {
				// 拍照处理
				System.out.println("拍照处理");
				String[] str = null;
				switch (getphone) {
				case 1:
					str = sendMap.get("idPic");
					if (str[1] == null) {
						idPics.setImageBitmap(getbitmap(str[0]));
					} else {
						idPictos.setImageBitmap(getbitmap(str[1]));
					}
					break;
				case 2:
					str = sendMap.get("cyPic");
					if (str[1] == null) {
						cyPics.setImageBitmap(getbitmap(str[0]));
					} else {
						cyPictos.setImageBitmap(getbitmap(str[1]));
					}
					break;
				case 3:
					str = sendMap.get("zyPic");
					if (str[1] == null) {
						zyPics.setImageBitmap(getbitmap(str[0]));
					} else {
						zyPictos.setImageBitmap(getbitmap(str[1]));
					}
					break;
				default:
					break;
				}

			} else if (resultCode == RESULT_CANCELED) {
				String[] str = null;
				switch (getphone) {
				case 1:
					str = sendMap.get("idPic");
					if (str[1] == null) {
						sendMap.remove("idPic");
					} else {
						str[1] = null;
					}
					break;
				case 2:
					str = sendMap.get("cyPic");
					if (str[1] == null) {
						sendMap.remove("cyPic");
					} else {
						str[1] = null;
					}
					break;
				case 3:
					str = sendMap.get("zyPic");
					if (str[1] == null) {
						sendMap.remove("zyPic");
					} else {
						str[1] = null;
					}
					break;
				default:
					break;
				}
			}
		}
	}

	private Bitmap getbitmap(String url) {
		Bitmap bm = null;
		try {
			bm = mBitmapLruCache.getUrlbitmaps(url, url, Editficates.this);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return bm;
	}
	
}
